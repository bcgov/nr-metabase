apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "database.fullname" . }}
  labels:
    {{- include "database.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "database.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "database.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: {{ include "database.fullname" . }}
          persistentVolumeClaim:
            claimName: {{ include "database.fullname" . }}
      containers:
        - name: {{ include "database.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "image-registry.openshift-image-registry.svc:5000/{{.Release.Namespace}}/{{ include "database.fullname" . }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /usr/bin/env
                - bash
                - -c
                - psql -q -U $POSTGRES_USER -d $POSTGRES_DB -c 'SELECT 1'
            failureThreshold: 20
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 1
          livenessProbe:
            exec:
              command:
                - /usr/bin/env
                - bash
                - -c
                - psql -q -U $POSTGRES_USER -d $POSTGRES_DB -c 'SELECT 1'
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{.Release.Name}}-{{ .Values.global.zone}}
                  key: databaseName
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{.Release.Name}}-{{ .Values.global.zone}}
                  key: databasePassword
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{.Release.Name}}-{{ .Values.global.zone}}
                  key: databaseUser
          volumeMounts:
            - name: {{ include "database.fullname" . }}
              mountPath: /var/lib/postgresql
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
