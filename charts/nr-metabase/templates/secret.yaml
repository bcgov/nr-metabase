# retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
{{- $secretName := printf "%s" (include "fullname" .) }}
{{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $secretName) | default dict }}
{{- $secretData := (get $secretObj "data") | default dict }}
  # set below to existing secret data or generate a random one when not exists
{{- $dbPwd := (get $secretData "databasePassword") | default (randAlpha 20 | b64enc)  }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-{{ .Values.global.zone }}
  labels: {{- include "selectorLabels" . | nindent 4 }}
data:
  databasePassword: {{ $dbPwd | quote }}
  databaseUser: {{  .Values.global.secrets.databaseUser | b64enc | quote }}
  databaseName: {{  .Values.global.secrets.databaseName | b64enc | quote }}
